{"version":3,"sources":["components/register.js","components/login.js","components/dashboard.js","components/player.js","components/video.js","components/header.js","App.js","serviceWorker.js","index.js"],"names":["SignupSchema","Yup","shape","username","min","max","required","email","password","confirm_password","oneOf","Register","props","submitForm","values","history","axios","post","then","res","console","log","data","result","swal","message","value","push","catch","error","showForm","errors","touched","handleChange","handleSubmit","isSubmitting","setFieldValue","Container","Row","xs","lg","className","onSubmit","href","type","name","onChange","placeholder","fullname","id","class","style","marginTop","disabled","state","alert","initialValues","setSubmitting","validationSchema","Component","LoginSchema","Login","localStorage","setItem","token","getItem","this","notify","match","params","undefined","Dashboard","shows","fetch","json","setState","fluid","map","show","Col","to","key","src","title","ReactJWPlayerContainer","videoTitle","autostart","onReady","bind","onVideoLoad","playerId","event","item","description","playsInline","poster","source","React","Video","appendData","a","link","path","replace","pos","process","REACT_APP_SERVER1","player","not_visible","useEffect","window","scrollTo","displayData","showdata","episodes","loaded","urls","Promise","all","res1","res2","res3","filter","seasonNumber","M","Tabs","init","display","i","md","network","runtime","genres","join","clear","overview","Tab","defaultActiveKey","sm","Nav","variant","episode","seasonCount","Item","Link","eventKey","Content","hasFile","Pane","color","fontStyle","episodeNumber","cursor","onClick","episodeFile","Header","Logout","buttons","nope","text","sure","val","removeItem","textTransform","userName","withRouter","isLoggedIn","SecuredRoute","component","rest","render","App","nextProps","nextState","exact","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c349822.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { Col, Row, Container, Form} from 'react-bootstrap'\r\n\r\nimport './register.css'\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .min(2, \"Username is too Short!\")\r\n    .max(50, \"Username is Too Long!\")\r\n    .required(\"Username is Required\"),\r\n  email: Yup.string()\r\n    .email(\"Invalid email\")\r\n    .required(\"Email is Required\"),\r\n  password: Yup.string().required(\"Password is required\"),\r\n  confirm_password: Yup.string().oneOf(\r\n    [Yup.ref(\"password\"), null],\r\n    \"Passwords do not match\"\r\n  )\r\n});\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this.props)\r\n\r\n    this.state = {\r\n      alert: null\r\n    };\r\n  }\r\n\r\n  submitForm = (values, history) => {\r\n    axios\r\n      .post('http://76.248.147.65:8080/register', values)\r\n      .then(res => {\r\n        console.log(res.data.result);\r\n        if (res.data.result === \"success\") {\r\n          swal(\"Success!\", res.data.message, \"success\").then(value => {\r\n            history.push(\"/login\");\r\n          });\r\n        } else if (res.data.result === \"error\") {\r\n          swal(\"Error!\", res.data.message, \"error\");\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        swal(\"Error!\", \"Unexpected error\", \"error\");\r\n      });\r\n  };\r\n  showForm = ({\r\n    values,\r\n    errors,\r\n    touched,\r\n    handleChange,\r\n    handleSubmit,\r\n    setFieldValue,\r\n    isSubmitting\r\n  }) => {\r\n    return (\r\n      <Container>\r\n      <Row xs={10} lg={4} className=\"justify-content-md-center\">\r\n      <form onSubmit={handleSubmit}>\r\n      <div className=\"loginRegisterTitle\">\r\n      <a href=\"/register\" className=\"row justify-content-md-center\">\r\n              <h1><b>Last</b>Play</h1>\r\n            </a>\r\n            </div>\r\n        <div className=\"registerLogin\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            onChange={handleChange}\r\n            value={values.username}\r\n            className=\"form-control\"\r\n            placeholder=\"Username\"\r\n            className={\r\n              errors.username && touched.username\r\n                ? \"form-control is-invalid\"\r\n                : \"form-control\"\r\n            }\r\n          />\r\n          {errors.fullname && touched.fullname ? (\r\n            <small id=\"passwordHelp\" class=\"text-danger\">\r\n              {errors.username}\r\n            </small>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"registerLogin\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n            value={values.email}\r\n            className={\r\n              errors.email && touched.email\r\n                ? \"form-control is-invalid\"\r\n                : \"form-control\"\r\n            }\r\n            placeholder=\"Email\"\r\n            style={{marginTop:'25px'}}\r\n\r\n          />\r\n          {errors.email && touched.email ? (\r\n            <small id=\"passwordHelp\" class=\"text-danger\">\r\n              {errors.email}\r\n            </small>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"registerLogin\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            value={values.password}\r\n            className=\"form-control\"\r\n            placeholder=\"Password\"\r\n            style={{marginTop:'25px'}}\r\n            className={\r\n              errors.password && touched.password\r\n                ? \"form-control is-invalid\"\r\n                : \"form-control\"\r\n            }\r\n          />\r\n          {errors.password && touched.password ? (\r\n            <small id=\"passwordHelp\" class=\"text-danger\">\r\n              {errors.password}\r\n            </small>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"registerLogin\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirm_password\"\r\n            onChange={handleChange}\r\n            className={\r\n              errors.confirm_password && touched.confirm_password\r\n                ? \"form-control is-invalid\"\r\n                : \"form-control\"\r\n            }\r\n            placeholder=\"Confirm Password\"\r\n            style={{marginTop:'25px'}}\r\n\r\n          />\r\n          {errors.confirm_password && touched.confirm_password ? (\r\n            <small id=\"passwordHelp\" class=\"text-danger\">\r\n              {errors.confirm_password}\r\n            </small>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col s8 offset-s2 center\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              class=\"btn btn-primary btn-block\"\r\n              style={{marginTop:'25px'}}\r\n            >\r\n              Register\r\n            </button>\r\n\r\n          </div>\r\n     \r\n        </div>\r\n      </form>\r\n      </Row>\r\n      </Container>    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"register-page\">\r\n        \r\n          \r\n            <div>\r\n\r\n              <Formik\r\n                initialValues={{\r\n                  fullname: \"\",\r\n                  email: \"\",\r\n                  password: \"\",\r\n                  confirm_password: \"\"\r\n                }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                  this.submitForm(values, this.props.history);\r\n                  setSubmitting(false);\r\n                }}\r\n                validationSchema={SignupSchema}\r\n              >\r\n                {props => this.showForm(props)}\r\n              </Formik>\r\n            </div>\r\n            {/* /.form-box */}\r\n          \r\n          {/* /.card */}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;","  \r\nimport React, { Component } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container, Form} from 'react-bootstrap'\r\nimport './style.css'\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .min(2, \"username is Too Short!\")\r\n    .max(50, \"username is Too Long!\")\r\n    .required(\"Username is Required\"),\r\n  password: Yup.string().required(\"Password is required\")\r\n});\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      alert: null\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"TOKEN_KEY\") != null) {\r\n      return this.props.history.push('/dashboard');\r\n    }\r\n    let notify = this.props.match.params[\"notify\"]\r\n    if(notify !== undefined){\r\n      if(notify === 'error'){\r\n        swal(\"Activation Fail please try again !\", '', \"error\")\r\n      }else if(notify === 'success'){\r\n        swal(\"Activation Success your can login !\", '', \"success\")\r\n      }\r\n     \r\n    }\r\n  }\r\n\r\n  submitForm = (values, history) => {\r\n    axios\r\n      .post('http://76.248.147.65:8080/login', values, values)\r\n      .then(res => {\r\n        if (res.data.result === \"success\") {\r\n          localStorage.setItem(\"TOKEN_KEY\", res.data.token);\r\n          localStorage.setItem(\"userName\", values.username)\r\n          swal(\"Success!\", res.data.message, \"success\").then(value => {\r\n            history.push(\"/dashboard\");\r\n          });\r\n        } else if (res.data.result === \"error\") {\r\n          swal(\"Error!\", res.data.message, \"error\");\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        return swal(\"Error!\", error.message, \"error\");\r\n      });\r\n  };\r\n  showForm = ({\r\n    values,\r\n    errors,\r\n    touched,\r\n    handleChange,\r\n    handleSubmit,\r\n    setFieldValue,\r\n    isSubmitting\r\n  }) => {\r\n    return (<Container>\r\n      <Row xs={10} lg={4} className=\"justify-content-md-center\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"loginRegisterTitle\">\r\n      <a href=\"/login\" className=\"row justify-content-md-center\">\r\n              <h1><b>Last</b>Play</h1>\r\n            </a>\r\n            </div>\r\n        <div className=\"registerLogin\">\r\n          <input type=\"text\" name=\"username\" onChange={handleChange} value={values.username} placeholder=\"Username\"className={errors.username && touched.username? \"form-control is-invalid\": \"form-control\"}/>\r\n          <div className=\"\">\r\n            <div className=\"\">\r\n              <span className=\"fas fa-user\"></span>\r\n            </div>\r\n          </div>\r\n          {errors.username && touched.username ? (\r\n            <small id=\"passwordHelp\" className=\"text-danger\">\r\n              {errors.username}\r\n            </small>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"registerLogin\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            value={values.password}\r\n            className=\"form-control\"\r\n            placeholder=\"Password\"\r\n            style={{marginTop:'25px'}}\r\n\r\n            className={\r\n              errors.password && touched.password\r\n                ? \"form-control is-invalid\"\r\n                : \"form-control\"\r\n            }\r\n          />\r\n          <div className=\"input-group-append\">\r\n              <span className=\"fas fa-lock\"></span>\r\n          </div>\r\n          {errors.password && touched.password ? (\r\n            <small id=\"passwordHelp\" className=\"text-danger\">\r\n              {errors.password}\r\n            </small>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"row justify-content-md-center\">\r\n\r\n          \r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              className=\"btn btn-primary btn-block\"\r\n              style={{marginTop:'25px'}}\r\n            >\r\n              Login\r\n            </button>\r\n        </div>\r\n        \r\n      </form>\r\n      </Row>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login-page\">\r\n        <div className=\"register-box\">\r\n            <div className=\"card-body register-card-body\">\r\n \r\n              <Formik\r\n                initialValues={{\r\n                  username: \"\",\r\n                  password: \"\"\r\n                }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                  this.submitForm(values, this.props.history);\r\n                  setSubmitting(false);\r\n                }}\r\n                validationSchema={LoginSchema}\r\n              >\r\n                {/* {this.showForm()}            */}\r\n                {props => this.showForm(props)}\r\n              </Formik>\r\n\r\n\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container} from 'react-bootstrap'\r\nimport './style.css'\r\n\r\nclass Dashboard extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            shows: [],\r\n        }\r\n    }\r\n\r\ncomponentDidMount() {\r\n\r\n    fetch('http://149.56.17.225:8989/api/series?apikey=33af4f32a34140faa3b3119541c78e14')\r\n    .then(res => res.json())\r\n    .then((data)=> {\r\n        this.setState({ \r\n            shows: data\r\n        })\r\n        console.log(this.state.shows)\r\n    })\r\n    .catch(console.log)\r\n}\r\n\r\n\r\nrender() {\r\n    return (\r\n        <Container fluid>\r\n            <Row xs={6}>\r\n            {this.state.shows.map(show =>\r\n            <Col className='shows' lg={1.5}>\r\n                <Link to={`tv/${show.id}`}><a key={show.id}> \r\n                <img src={`http://149.56.17.225:8989/MediaCover/${show.id}/poster-250.jpg`} /> <br />\r\n                <span>{show.title}</span>\r\n                </a></Link>\r\n                </Col>)}\r\n                </Row>\r\n        </Container>\r\n    )\r\n    }\r\n}\r\nexport default Dashboard","import React from 'react';\r\nimport { Player } from 'video-react';\r\nimport \"video-react/dist/video-react.css\";\r\n\r\nconst propTypes = {\r\n\r\n};\r\n\r\nclass ReactJWPlayerContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      videoTitle: '',\r\n      autostart: 'viewable',\r\n    };\r\n\r\n    console.log(this.props)\r\n\r\n    this.onReady = this.onReady.bind(this);\r\n    this.onVideoLoad = this.onVideoLoad.bind(this);\r\n\r\n    // each instance of <ReactJWPlayer> needs a unique id.\r\n    // we randomly generate it here and assign to the container instance.\r\n    this.playerId = ' ';\r\n\r\n  }\r\n  onReady(event) {\r\n    // interact with JW Player API here\r\n  }\r\n\r\n  onVideoLoad(event) {\r\n    this.setState({\r\n      videoTitle: event.item.description // this only works with json feeds!\r\n    });\r\n  }\r\n  render() \r\n  {\r\n    return (\r\n      <div className='react-jw-player-container'>\r\n        <h1>{ this.state.videoTitle }</h1>\r\n        <Player\r\n      playsInline\r\n      poster={this.props.poster}\r\n      src={this.props.source}\r\n    />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ReactJWPlayerContainer;","import React, {Component} from 'react';\r\nimport './style.css';\r\nimport ReactJWPlayerContainer from './player'\r\nimport M from \"materialize-css\";\r\nimport {Tab, Col, Nav, Row, Container} from 'react-bootstrap'\r\nimport Login from './login'\r\nclass Video extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.displayData = [];\r\n\r\n        this.state = {\r\n            showdata: this.displayData,\r\n            shows: [],\r\n            episodes: [],\r\n            player: '',\r\n            poster: '',\r\n            not_visible: true,\r\n            loaded:false\r\n        }\r\n        \r\n\r\n        this.appendData = this.appendData.bind(this);\r\n\r\n    };\r\n    componentDidMount() {\r\n        let urls = [fetch(`${process.env.REACT_APP_SERVER1}http://149.56.17.225:8989/api/episode?seriesId=${this.props.match.params.id}&apikey=33af4f32a34140faa3b3119541c78e14`),\r\n                    fetch(`${process.env.REACT_APP_SERVER1}api/series/id=${this.props.match.params.id}?apikey=33af4f32a34140faa3b3119541c78e14`)]\r\n        Promise.all(urls)\r\n        .then(([res1, res2]) => { \r\n            return Promise.all([res1.json(), res2.json()]) \r\n         })\r\n         .then(([res1, res2, res3]) => {\r\n             res3 = res1.filter(res3 => res3.seasonNumber > 0)\r\n           this.setState({\r\n               shows: res2,\r\n               episodes: res3,\r\n               loaded: true,\r\n           })\r\n         });\r\n         M.Tabs.init(this.Tabs);\r\n   }\r\n\r\n    appendData = (a) => {\r\n           let link = 'http://149.56.17.225' + a.path.replace('/media/disk1', '')\r\n           let pos = `${process.env.REACT_APP_SERVER1}MediaCover/${this.state.shows.id}/fanart.jpg`\r\n            this.setState({\r\n                player: link,\r\n                poster: pos,\r\n                not_visible: false\r\n        })\r\n        this.useEffect()\r\n    }\r\n\r\n    useEffect = () => {\r\n        window.scrollTo(0, 0)\r\n      }\r\n\r\n    render() {\r\n\r\n        const style = this.state.not_visible ? {display: 'none',} : {}\r\n        \r\nlet i = 0\r\n{if (this.state.loaded === false) return null;\r\n }\r\n console.log(this.state.shows)\r\n\r\n        return ( \r\n            <Container>\r\n                <Row>\r\n                    <Col xs={12} md={4}>\r\n                        <img src={`${process.env.REACT_APP_SERVER1}MediaCover/${this.state.shows.id}/poster-250.jpg`} />\r\n                    </Col>\r\n                    <Col xs={12} md={8}>\r\n                    <h3>{this.state.shows.title}</h3>\r\n                    <ul>\r\n                        <li>Network: {this.state.shows.network}</li>\r\n                        <li>Runtime: {this.state.shows.runtime} min.</li>\r\n                        <li>Genres: {this.state.shows.genres.join(', ')}</li>\r\n                    </ul>\r\n                    </Col>\r\n                    </Row>\r\n                    <Row xs={12} style={{clear:'both'}}>\r\n      <p>{this.state.shows.overview}</p>\r\n    </Row>\r\n                <Row xs={8}>\r\n                <div className = \"display-data-Container col s10 offset-s3 center-align\" style={style}  > \r\n                    <ReactJWPlayerContainer  source={this.state.player} poster={this.state.poster}/>\r\n                </div> \r\n                </Row>\r\n<Row>\r\n            <Tab.Container id=\"season-tabs\" defaultActiveKey=\"first\">\r\n                \r\n                    <Col sm={3}>\r\n                    <Nav variant=\"pills\" className=\"flex-column\">\r\n                        {this.state.episodes.map(episode => {\r\n                            if (this.state.shows.seasonCount > i) {\r\n                                    i++\r\n                            return ( \r\n                                <Nav.Item>\r\n                                <Nav.Link eventKey={`season${i}`}>Season {i}</Nav.Link>\r\n                                </Nav.Item>\r\n                                )}})}\r\n                                  </Nav>\r\n    </Col>\r\n    <Col sm={9}>\r\n      <Tab.Content>\r\n            {this.state.episodes.map(episode =>\r\n                {\r\n                    if (episode.hasFile === false) {\r\n                        return ( \r\n                            \r\n                            <Tab.Pane eventKey={`season${episode.seasonNumber}`}>\r\n                            <a  style={{color: 'red', fontStyle: 'italic'}}>{episode.episodeNumber} - {episode.title}</a>\r\n                          </Tab.Pane>\r\n                        )\r\n                    }  {\r\n                        return ( \r\n                            <Tab.Pane eventKey={`season${episode.seasonNumber}`}>\r\n                        <a  id={`season${episode.seasonNumber}`}style={{cursor: 'pointer'}} onClick = {this.appendData.bind(this, episode.episodeFile)}>{episode.episodeNumber} - {episode.title}</a> \r\n                        </Tab.Pane>\r\n                       \r\n                            )\r\n                        }\r\n                    }\r\n                )}\r\n                  \r\n      </Tab.Content>\r\n      \r\n    </Col>\r\n</Tab.Container>\r\n</Row>\r\n</Container>\r\n        )\r\n    \r\n    }\r\n}\r\n\r\n\r\nexport default Video;\r\n\r\n","import React, { Component } from \"react\";\r\nimport swal from \"sweetalert\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Navbar, Nav, NavItem } from 'react-bootstrap'\r\n\r\nclass Header extends Component {\r\n  Logout = () => {\r\n    swal(\"Logout?\", {\r\n      buttons: {\r\n        nope: {\r\n          text: \"Yes\",\r\n          value: \"yes\"\r\n        },\r\n        sure: {\r\n          text: \"Not yet\",\r\n          value: \"no\"\r\n        }\r\n      }\r\n    }).then(value => {\r\n      switch (value) {\r\n        case \"yes\":\r\n          swal(\"Logout successful\", \"\").then(val => {\r\n            localStorage.removeItem(\"TOKEN_KEY\");\r\n            return this.props.history.push(\"/login\");\r\n          });\r\n          break;\r\n        case \"no\":\r\n          break;\r\n        default:\r\n \r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n<div className=\"navigation\">\r\n<Nav className=\"navz\">\r\n<Nav.Item>\r\n      <Nav.Link href=\"/dashboard\">Home</Nav.Link>\r\n    </Nav.Item>\r\n</Nav>\r\n<Nav className=\"justify-content-end\">\r\n<Nav.Link eventKey=\"3\" disabled style={{textTransform: 'capitalize'}}>\r\n          Welcome, {localStorage.userName}\r\n        </Nav.Link>\r\n<Nav.Item>\r\n      <Nav.Link href=\"#\" onClick={this.Logout}>Logout</Nav.Link>\r\n    </Nav.Item>\r\n</Nav>\r\n</div>\r\n            \r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n\r\n\r\n","import React, { Component } from \"react\";\nimport Register from \"./components/register\";\nimport Login from \"./components/login\";\nimport Dashboard from \"./components/dashboard\";\nimport Video from \"./components/video\";\nimport Header from \"./components/header\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nconst isLoggedIn = () => {\n  return localStorage.getItem(\"TOKEN_KEY\") != null;\n};\n\n// Protected Route\nconst SecuredRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      // ternary condition\n\n      isLoggedIn() === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\nexport default class App extends Component {\n  componentWillUpdate(nextProps, nextState) {\n    console.log(\"update\");\n  }\n\n  render() {\n    // const {pathname} = this.props.location;\n    return (\n      <Router>\n        <Switch>\n          <div>\n          {isLoggedIn() && <Header />}\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/login/:notify?\" component={Login} />\n            <SecuredRoute path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute path=\"/\" exact component={Dashboard} />\n            <SecuredRoute path=\"/tv/:id\" component={Video} />\n\n          </div>\n        </Switch>\n      </Router>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
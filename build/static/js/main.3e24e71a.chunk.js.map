{"version":3,"sources":["components/register.js","components/login.js","components/header/header.js","components/dashboard/dashboard.js","components/player.js","components/video.js","components/contact.js","components/passwordreset/index.js","components/passwordforgot/index.js","App.js","serviceWorker.js","index.js"],"names":["SignupSchema","Yup","shape","username","min","max","required","email","password","confirm_password","oneOf","Register","props","submitForm","values","history","toLowerCase","trim","axios","post","then","res","console","log","data","result","swal","message","value","push","catch","error","showForm","errors","touched","handleChange","handleSubmit","isSubmitting","setFieldValue","className","Row","md","src","alt","Container","style","backgroundColor","xs","lg","onSubmit","type","name","onChange","placeholder","fullname","id","class","marginTop","disabled","state","alert","loaded","initialValues","setSubmitting","validationSchema","Component","LoginSchema","Login","a","localStorage","setItem","token","toUpperCase","slice","width","fontSize","Col","textAlign","getItem","this","withRouter","userName","menuStyle","borderRadius","boxShadow","background","padding","position","overflow","paddingBottom","maxHeight","Header","getFilteredItems","Autocomplete","prototype","call","limitItemsLength","Logout","buttons","nope","text","sure","removeItem","fetched","shows","fetch","headers","json","setState","map","show","Navbar","fixed","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","marginRight","eventKey","ListGroup","items","shouldItemRender","item","title","indexOf","getItemValue","renderItem","highlighted","Item","key","height","e","target","onSelect","onClick","inputProps","NavDropdown","Dashboard","sort","b","localeCompare","sm","to","JSPlayer","videoTitle","autostart","onReady","bind","onVideoLoad","playerId","event","description","playsInline","poster","source","React","Video","appendData","link","path","replace","pos","epTitle","player","episodeTitle","not_visible","useEffect","window","scrollTo","top","left","behavior","useEffectBottom","displayData","showdata","episodes","urls","match","params","Promise","all","res1","res2","res3","filter","seasonNumber","M","Tabs","init","i","display","network","runtime","certification","genres","join","overview","onContextMenu","preventDefault","stopPropagation","Tab","defaultActiveKey","responsive","desktop","breakpoint","partialVisibilityGutter","slidesToSlide","tablet","mobile","centerMode","swipeable","draggable","ssr","infinite","keyBoardControl","containerClass","deviceType","dotListClass","itemClass","focusOnSelect","renderButtonGroupOutside","episode","seasonCount","imdbId","backgroundImage","backgroundSize","onError","Content","hasFile","Pane","color","fontStyle","episodeNumber","episodeFile","cursor","ContactSchema","body","Contact","rows","paddingTop","PasswordresetSchema","Passwordreset","response","error_message","avatar","PasswordForgotSchema","Passwordforgot","formData","htmlFor","disable","SecuredRoute","component","rest","render","App","nextProps","nextState","exact","Boolean","location","hostname","createBrowserHistory","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e24e71a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { Row, Container} from 'react-bootstrap'\r\n\r\nimport './register.css'\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .min(2, \"Username is too Short!\")\r\n    .max(50, \"Username is Too Long!\")\r\n    .required(\"Username is Required\"),\r\n  email: Yup.string()\r\n    .email(\"Invalid email\")\r\n    .required(\"Email is Required\"),\r\n  password: Yup.string().required(\"Password is required\"),\r\n  confirm_password: Yup.string().oneOf(\r\n    [Yup.ref(\"password\"), null],\r\n    \"Passwords do not match\"\r\n  )\r\n});\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this.props)\r\n\r\n    this.state = {\r\n      alert: null,\r\n      loaded: false\r\n    };\r\n  }\r\n\r\n  submitForm = (values, history) => {\r\n    values.username = values.username.toLowerCase()\r\n    values.username = values.username.trim()\r\n    axios\r\n      .post('http://localhost:3000/register', values)\r\n      .then(res => {\r\n        console.log(res.data.result);\r\n        if (res.data.result === \"success\") {\r\n          swal(\"Success!\", res.data.message, \"success\").then(value => {\r\n            history.push(\"/login\");\r\n          });\r\n        } else if (res.data.result === \"error\") {\r\n          swal(\"Error!\", res.data.message, \"error\");\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        swal(\"Error!\", \"Unexpected error\", \"error\");\r\n      });\r\n  };\r\n  showForm = ({\r\n    values,\r\n    errors,\r\n    touched,\r\n    handleChange,\r\n    handleSubmit,\r\n    setFieldValue,\r\n    isSubmitting\r\n  }) => {\r\n    return (\r\n      <div className=\"registerBox\"> \r\n                    <h1><b>Last</b>Play</h1>\r\n<Row md={4}>\r\n<img src={process.env.PUBLIC_URL + '/logo100.png' } alt=\"logo\" /> \r\n\r\n\r\n</Row>\r\n      <Container style={{backgroundColor:\"#fff\"}}>\r\n      <Row xs={1} lg={4} className=\"justify-content-center\">\r\n      <form onSubmit={handleSubmit}>\r\n      <div className=\"loginRegisterTitle\">\r\n            </div>\r\n        <div className=\"registerLogin\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            onChange={handleChange}\r\n            value={values.username}\r\n            placeholder=\"Username\"\r\n            className={\r\n              errors.username && touched.username\r\n                ? \"form-control is-invalid\"\r\n                : \"form-control\"\r\n            }\r\n          />\r\n          {errors.fullname && touched.fullname ? (\r\n            <small id=\"passwordHelp\" class=\"text-danger\">\r\n              {errors.username}\r\n            </small>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"registerLogin\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n            value={values.email}\r\n            className={\r\n              errors.email && touched.email\r\n                ? \"form-control is-invalid\"\r\n                : \"form-control\"\r\n            }\r\n            placeholder=\"Email\"\r\n            style={{marginTop:'25px'}}\r\n\r\n          />\r\n          {errors.email && touched.email ? (\r\n            <small id=\"passwordHelp\" class=\"text-danger\">\r\n              {errors.email}\r\n            </small>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"registerLogin\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            value={values.password}\r\n            placeholder=\"Password\"\r\n            style={{marginTop:'25px'}}\r\n            className={\r\n              errors.password && touched.password\r\n                ? \"form-control is-invalid\"\r\n                : \"form-control\"\r\n            }\r\n          />\r\n          {errors.password && touched.password ? (\r\n            <small id=\"passwordHelp\" class=\"text-danger\">\r\n              {errors.password}\r\n            </small>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"registerLogin\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirm_password\"\r\n            onChange={handleChange}\r\n            className={\r\n              errors.confirm_password && touched.confirm_password\r\n                ? \"form-control is-invalid\"\r\n                : \"form-control\"\r\n            }\r\n            placeholder=\"Confirm Password\"\r\n            style={{marginTop:'25px'}}\r\n\r\n          />\r\n          {errors.confirm_password && touched.confirm_password ? (\r\n            <small id=\"passwordHelp\" class=\"text-danger\">\r\n              {errors.confirm_password}\r\n            </small>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col s8 offset-s2 center\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              class=\"btn btn-primary btn-block\"\r\n              style={{marginTop:'25px'}}\r\n            >\r\n              Register\r\n            </button>\r\n\r\n          </div>\r\n     \r\n        </div>\r\n      </form>\r\n      </Row>\r\n      </Container> \r\n      </div>   );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"register-page\">\r\n        \r\n          \r\n            <div>\r\n              <Formik\r\n                initialValues={{\r\n                  fullname: \"\",\r\n                  email: \"\",\r\n                  password: \"\",\r\n                  confirm_password: \"\"\r\n                }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                  this.submitForm(values, this.props.history);\r\n                  setSubmitting(false);\r\n                }}\r\n                validationSchema={SignupSchema}\r\n              >\r\n                {props => this.showForm(props)}\r\n              </Formik>\r\n            </div>\r\n            {/* /.form-box */}\r\n          \r\n          {/* /.card */}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;","  \r\nimport React, { Component } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport './style.css'\r\nimport { Col, Row, Container} from 'react-bootstrap'\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .min(2, \"username is Too Short!\")\r\n    .max(50, \"username is Too Long!\")\r\n    .required(\"Username is Required\"),\r\n  password: Yup.string().required(\"Password is required\")\r\n});\r\n\r\n\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      alert: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"TOKEN_KEY\") != null) {\r\n      return this.props.history.push('/dashboard');\r\n    }\r\n      }\r\n     \r\n\r\n    submitForm = async(values, history) => {\r\n        values.username = values.username.toLowerCase()\r\n        axios\r\n          .post('http://localhost:3000/login', values, values)\r\n          .then(res => {\r\n            if (res.data.result === \"success\") {\r\n              localStorage.setItem(\"TOKEN_KEY\", res.data.token);\r\n             localStorage.setItem(\"userName\", values.username[0].toUpperCase() + values.username.slice(1))\r\n               this.props.history.push(\"/dashboard\")\r\n\r\n\r\n            } else if (res.data.result === \"error\") {\r\n              swal(\"Error!\", res.data.message, \"error\");\r\n            }\r\n          })\r\n      .catch(error => {\r\n        console.log(error);\r\n        return swal(\"Error!\", error.message, \"error\");\r\n      });\r\n  };\r\n  showForm = ({\r\n    values,\r\n    errors,\r\n    touched,\r\n    handleChange,\r\n    handleSubmit,\r\n    setFieldValue,\r\n    isSubmitting\r\n  }) => {\r\n    return (\r\n      <Container>\r\n                <div  style={{width:\"50%;\"}}className=\"registerBox justify-content-md-center\">\r\n        <Row md={6} className=\"justify-content-center\">\r\n      <h1><b>Last</b>Play<span style={{fontSize:\"14px\"}}>.tv</span></h1>\r\n      </Row>\r\n      <Row md={12} className=\"justify-content-center\">\r\n      <img src={process.env.PUBLIC_URL + '/logo100.png' } alt=\"logo\" /> \r\n            </Row>\r\n\r\n  \r\n        <Row md={6} className=\"justify-content-center\">\r\n        <form onSubmit={handleSubmit}>\r\n        <div className=\"registerLogin\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            onChange={handleChange}\r\n            value={values.username}\r\n            placeholder=\"Username\"\r\n            className={\r\n              errors.username && touched.username\r\n                ? \"form-control is-invalid\"\r\n                : \"form-control\"\r\n            }\r\n          />\r\n\r\n          {errors.username && touched.username ? (\r\n            <small id=\"passwordHelp\" class=\"text-danger\">\r\n              {errors.username}\r\n            </small>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"form-group input-group mb-3 has-feedback\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            value={values.password}\r\n            placeholder=\"Password\"\r\n            className={\r\n              errors.password && touched.password\r\n                ? \"form-control is-invalid\"\r\n                : \"form-control\"\r\n            }\r\n          />\r\n          \r\n          {errors.password && touched.password ? (\r\n            <small id=\"passwordHelp\" class=\"text-danger\">\r\n              {errors.password}\r\n            </small>\r\n          ) : null}\r\n        </div>\r\n        \r\n          <Col style={{ textAlign:\"center\"}}>\r\n          <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              className=\"btn btn-primary btn-block\"\r\n              style={{marginTop:'45px'}}\r\n            >\r\n              Login\r\n            </button>\r\n            <span style={{fontSize:\"12px\"}}>Forgot password? <br />Click here.</span>\r\n\r\n          </Col>\r\n      </form>         \r\n\r\n\r\n        </Row>\r\n\r\n\r\n        </div>\r\n\r\n</Container>\r\n\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n<Container>\r\n<Formik\r\n                initialValues={{\r\n                  username: \"\",\r\n                  password: \"\"\r\n                }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                  this.submitForm(values, this.props.history);\r\n                  setSubmitting(false);\r\n                }}\r\n                validationSchema={LoginSchema}\r\n              >\r\n              \r\n                {props => this.showForm(props)}\r\n              </Formik>\r\n              </Container>\r\n\r\n      </div>\r\n      \r\n\r\n\r\n\r\n            \r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","import React, { Component } from 'react'\r\nimport swal from \"sweetalert\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Nav, Navbar, NavDropdown, ListGroup } from 'react-bootstrap'\r\nimport '../style.css'\r\nimport Autocomplete from 'react-autocomplete';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst username = localStorage.userName\r\n\r\n\r\nlet menuStyle={\r\n  borderRadius: '',\r\n  boxShadow: '0 2px 12px rgba(0, 0, 0, 0.1)',\r\n  background: 'rgba(255, 255, 255, 0.9)',\r\n  padding: '0 0',\r\n  fontSize: '90%',\r\n  position: 'fixed',\r\n  overflow: 'auto',\r\n  paddingBottom:'-5px',\r\n  maxHeight: '50%', // TODO: don't cheat, let it flow to the bottom\r\n}\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: '',\r\n      fetched: false,\r\n      shows: []\r\n    };\r\n  }\r\n  getFilteredItems =(props) =>{\r\n    const items = Autocomplete.prototype.getFilteredItems.call(this, props);\r\n    return items.slice(0, props.limitItemsLength);\r\n  }\r\n Logout = props => {\r\n  swal(\"Logout?\", {\r\n    buttons: {\r\n      nope: {\r\n        text: \"Yes\",\r\n        value: \"yes\"\r\n      },\r\n      sure: {\r\n        text: \"Not yet\",\r\n        value: \"no\"\r\n      }\r\n    }\r\n  }).then(value => {\r\n    switch (value) {\r\n      case \"yes\":\r\n          localStorage.removeItem(\"TOKEN_KEY\");\r\n           this.props.history.push(\"/login\");\r\n        ;\r\n        break;\r\n      case \"no\":\r\n        break;\r\n      default:\r\n\r\n    }\r\n  \r\n})}\r\ncomponentDidMount() {\r\n  if(!this.state.fetched) {\r\n    fetch('https://lp-server1.lastplay.tv/app/api/series?apikey=33af4f32a34140faa3b3119541c78e14',           \r\n    { headers: {\r\n       'Accept': 'application/json',\r\n                 'Content-Type': ' application/json',\r\n                 'X-API-SERVER': '85499f9f'\r\n    }})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      this.setState({fetched: true})\r\n      data.map(show => {\r\n        return this.state.shows.push(show) })\r\n    })\r\n  }\r\n console.log(this.state.shows)\r\n}\r\nrender() \r\n{\r\n  return(\r\n    <div>\r\n\r\n    <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n    \r\n    <Navbar.Brand href=\"/dashboard\"><img src={process.env.PUBLIC_URL + '/logo100.png'}className=\"headerimg\"alt=\"logo\"/><b>Last</b>Play</Navbar.Brand>\r\n    \r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n    \r\n    \r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n  \r\n\r\n                <Nav.Link href=\"/dashboard\">Home</Nav.Link>\r\n                <Nav.Link href=\"/dashboard\">TV</Nav.Link>\r\n                <Nav.Link style={{marginRight:\"5px\"}}href=\"/movies\" eventKey=\"disabled\" disabled >Movies</Nav.Link>\r\n                <Nav className=\"searchbar\">\r\n                <ListGroup variant=\"flush\">\r\n      <Autocomplete\r\n                   \r\n                   items={this.state.shows}\r\n                   shouldItemRender={(item, value) => item.title.toLowerCase().indexOf(value.toLowerCase()) > -1 && value.slice(1,10)}\r\n                   getItemValue={item => item.title}\r\n                   renderItem={(item, highlighted) =>\r\n                    <ListGroup.Item  className=\"searchbar\">\r\n                     <a\r\n                       key={item.id}\r\n                       className=\"stretched-link dropdowns\"\r\n                       href={`/tv/${item.id}`}\r\n                     > <img src={`https://lp-server1.lastplay.tv/app/MediaCover/${item.id}/poster-250.jpg`} style={{width:'42px', height:\"75px\"}}alt={`${item.title} poster`}/>\r\n                        {item.title}\r\n                     </a>\r\n                     </ListGroup.Item>\r\n                   }\r\n                   value={this.state.value}\r\n                   onChange={e => this.setState({ value: e.target.value })}\r\n                   onSelect={value => this.setState({ value })}\r\n                   onClick={value => this.setState({ value })}\r\n                   menuStyle={menuStyle}\r\n                   inputProps={{placeholder: \"Search..\"}}\r\n                   \r\n                   \r\n                 /></ListGroup>\r\n      </Nav>\r\n              </Nav>\r\n              \r\n                <Nav>\r\n                <Nav.Link href=\"/contact\">Contact</Nav.Link>\r\n                <NavDropdown title={`Welcome, ${username}`} id=\"collasible-nav-dropdown\">\r\n                  <NavDropdown.Item bg=\"dark\" href=\"#\" onClick={this.Logout}>Logout</NavDropdown.Item>\r\n            </NavDropdown>\r\n            \r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n                </div>\r\n\r\n\r\n  )\r\n}\r\n\r\n  }\r\n  \r\n\r\nexport default withRouter(Header);\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row} from 'react-bootstrap'\r\nimport '../style.css'\r\nimport Header from '../header'\r\n\r\nclass Dashboard extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            shows: []\r\n\r\n        }\r\n    }\r\n\r\ncomponentDidMount() {\r\n    fetch('https://lp-server1.lastplay.tv/app/api/series?apikey=33af4f32a34140faa3b3119541c78e14',           \r\n     { headers: {\r\n        'Accept': 'application/json',\r\n                  'Content-Type': ' application/json',\r\n                  'X-API-SERVER': '85499f9f'\r\n     }})\r\n    .then(res => res.json())\r\n    .then((data)=> {\r\n        this.setState({ \r\n            shows: data.sort((a, b) => a.title.localeCompare(b.title  ))\r\n        })\r\n\r\n\r\n        \r\n    })\r\n    .catch(console.log)\r\n}\r\n\r\n\r\nrender() \r\n{\r\n    return (<div>\r\n<Header />\r\n        <div>\r\n          <Row style={{marginTop:\"5%\"}} className=\"accordian justify-content-center\">\r\n            {this.state.shows.map(show =>\r\n            <Col xs={6} sm className='shows' key={`${show.id}`}>\r\n                <Link to={`tv/${show.id}`}>\r\n                    <img src={`https://lp-server1.lastplay.tv/app/MediaCover/${show.id}/poster-250.jpg`} alt={`${show.title} poster`}/> <br />\r\n                    <span>{show.title}</span>\r\n                </Link>\r\n            </Col>)}\r\n          </Row>\r\n        </div>\r\n        </div>\r\n\r\n    )\r\n    }\r\n}\r\nexport default Dashboard","import React from 'react';\r\nimport { Player, BigPlayButton } from 'video-react';\r\nimport \"video-react/dist/video-react.css\";\r\n\r\nclass JSPlayer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      videoTitle: '',\r\n      autostart: 'viewable',\r\n    };\r\n    \r\n    this.onReady = this.onReady.bind(this);\r\n    this.onVideoLoad = this.onVideoLoad.bind(this);\r\n\r\n    // each instance of <ReactJWPlayer> needs a unique id.\r\n    // we randomly generate it here and assign to the container instance.\r\n    this.playerId = ' ';\r\n\r\n  }\r\n  onReady(event) {\r\n    // interact with JW Player API here\r\n  }\r\n\r\n  onVideoLoad(event) {\r\n    this.setState({\r\n      videoTitle: event.item.description // this only works with json feeds!\r\n    });\r\n  }\r\n  render() \r\n  {\r\n    return (\r\n      <div className='video-react-big-play-button-center'>\r\n        <h1>{ this.state.videoTitle }</h1>\r\n        <Player\r\n      playsInline = {false}\r\n      poster={this.props.poster}\r\n      src={this.props.source}\r\n      className=\"video-react-big-play-button-center\"\r\n\r\n     \r\n      \r\n    ><BigPlayButton position=\"center\" />\r\n      </Player>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default JSPlayer;","import React from 'react';\r\nimport './style.css';\r\nimport JSPlayer from './player'\r\nimport M from \"materialize-css\";\r\nimport {Tab, Col, Nav, Row, Container} from 'react-bootstrap'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport Header from './header'\r\n\r\n\r\nclass Video extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.displayData = [];\r\n\r\n        this.state = {\r\n            showdata: this.displayData,\r\n            shows: [],\r\n            episodes: [],\r\n            player: '',\r\n            poster: '',\r\n            not_visible: true,\r\n            loaded:false\r\n        }\r\n        \r\n\r\n        this.appendData = this.appendData.bind(this);\r\n\r\n    };\r\n    componentDidMount() {\r\n        let urls = [fetch(`https://lp-server1.lastplay.tv/app/api/episode?seriesId=${this.props.match.params.id}&apikey=33af4f32a34140faa3b3119541c78e14`),\r\n                    fetch(`https://lp-server1.lastplay.tv/app/api/series/id=${this.props.match.params.id}?apikey=33af4f32a34140faa3b3119541c78e14`)]\r\n        Promise.all(urls)\r\n        .then(([res1, res2]) => { \r\n            return Promise.all([res1.json(), res2.json()]) \r\n         })\r\n         .then(([res1, res2, res3]) => {\r\n             res3 = res1.filter(res3 => res3.seasonNumber > 0)\r\n           this.setState({\r\n               shows: res2,\r\n               episodes: res3,\r\n               loaded: true,\r\n           })\r\n         });\r\n         M.Tabs.init(this.Tabs);\r\n   }\r\n\r\n    appendData = (a) => {\r\n           let link = 'https://lp-server1.lastplay.tv' + a.path.replace('/media/disk1', '')\r\n           let pos = `https://lp-server1.lastplay.tv/app/MediaCover/${this.state.shows.id}/fanart.jpg`\r\n           let epTitle = a\r\n            this.setState({\r\n                player: link,\r\n                poster: pos,\r\n                episodeTitle: epTitle,\r\n                not_visible: false\r\n        })\r\n        this.useEffect()\r\n    }\r\n\r\n    useEffect = () => {\r\n        window.scrollTo({\r\n            top: 500,\r\n            left: 0,\r\n            behavior: 'smooth'\r\n          });\r\n      }\r\n\r\n      useEffectBottom = () => {\r\n        window.scrollTo({\r\n            top: 1500,\r\n            left: 0,\r\n            behavior: 'smooth'\r\n          });\r\n        }\r\n\r\n\r\n    render() {\r\n        let i=0\r\n        const responsive = {\r\n            desktop: {\r\n              breakpoint: { max: 3000, min: 600 },\r\n              items: 3,\r\n              partialVisibilityGutter: 40, // this is needed to tell the amount of px that should be visible.\r\n              slidesToSlide: 3\r\n            },\r\n            tablet: {\r\n              breakpoint: { max: 1024, min: 464 },\r\n              items: 2,\r\n              partialVisibilityGutter: 30,             // this is needed to tell the amount of px that should be visible.\r\n\r\n              slidesToSlide: 2\r\n            },\r\n            mobile: {\r\n              breakpoint: { max: 464, min: 0 },\r\n              items: 1,\r\n              partialVisibilityGutter: 30 // this is needed to tell the amount of px that should be visible.\r\n            }\r\n          }\r\n\r\n        const style = this.state.not_visible ? {display: 'none', padding: '10%'} : {}\r\n        \r\nif (this.state.loaded === false) \r\n  return null;\r\n\r\n\r\n        return ( \r\n            <div style={{backgroundColor:\"#f1f1f1\"}}>\r\n                <Header />\r\n                <div className=\"UpperHeader\">\r\n                 <img src={`https://lp-server1.lastplay.tv/app/MediaCover/${this.state.shows.id}/fanart.jpg`} alt={`${this.state.shows.title} poster`} style={{width:'100%'}} />\r\n                </div>\r\n<Container>\r\n   <Row>\r\n    <Col className=\"postertab\" md={3} > \r\n        <img src={`https://lp-server1.lastplay.tv/app/MediaCover/${this.state.shows.id}/poster-250.jpg`} alt={`${this.state.shows.title} poster`} /> <br />\r\n        <h2>{this.state.shows.title}</h2>\r\n        <p>{this.state.shows.network} | {this.state.shows.runtime} min. | {this.state.shows.certification}</p>\r\n        <span style={{fontSize:\"14px\"}}>{this.state.shows.genres.join(' | ')}</span>\r\n    </Col>\r\n    <Col md={9} style={{padding:'5%'}}>\r\n        <p>{this.state.shows.overview}</p>\r\n        \r\n        <div className = \"display-data-Container\" style={style}  onContextMenu={(e) => {\r\n    e.preventDefault(); \r\n    e.stopPropagation();\r\n}}> \r\n            <h3>{this.state.show}</h3>\r\n                    <JSPlayer source={this.state.player} poster={this.state.poster} >\r\n                    </JSPlayer>\r\n        </div> \r\n            <div>\r\n            <Row>\r\n      <Col xs={6}>\r\n        \r\n      </Col>\r\n \r\n    </Row>\r\n \r\n          <Tab.Container defaultActiveKey=\"season1\">\r\n            <Carousel responsive={responsive} centerMode={false}\r\n              swipeable={false}\r\n              draggable={false}\r\n              ssr={true} // means to render carousel on server-side.\r\n              infinite={true}\r\n              keyBoardControl={true}\r\n              containerClass=\"carousel-container\"\r\n              deviceType={this.props.deviceType}\r\n              dotListClass=\"custom-dot-list-style\"\r\n              itemClass=\"carousel-item-padding-40-px\"\r\n              focusOnSelect={true}\r\n              renderButtonGroupOutside={true}\r\n              >\r\n        \r\n                    {this.state.episodes.map(episode => {\r\n                    if (this.state.shows.seasonCount > i) {\r\n                        i++\r\n                    return ( \r\n                        <div className=\"card\" key={`${i}`}><Nav.Link eventKey={`season${i}`} >\r\n                        <img variant=\"top\" className=\"card-img\" src={`http://lp-server1.lastplay.tv/t/${this.state.shows.imdbId}/season0${i}-poster.jpg`}\r\n                         alt=\"poster\" \r\n                         style={{backgroundImage: `url(https://lp-server1.lastplay.tv/app/MediaCover/${this.state.shows.id}/poster-250.jpg)`,\r\n                          backgroundSize: 'cover'}}\r\n                        onError={(e) => {\r\n                            e.target.src = `https://lp-server1.lastplay.tv/app/MediaCover/${this.state.shows.id}/poster-250.jpg` // some replacement image\r\n                         }} />\r\n                        <h2 style={{maxHeight:'45px'}}>Season {i}  </h2>\r\n                        </Nav.Link></div>\r\n                                )}})}                  \r\n                </Carousel>\r\n\r\n\r\n      \r\n                <ListGroup><Tab.Content className=\"seasonTabs\" >\r\n            {this.state.episodes.map(episode => {\r\n                    if (episode.hasFile === false) {\r\n                        return ( \r\n                            <Tab.Pane eventKey={`season${episode.seasonNumber}`} key={episode.id}><ListGroup.Item >\r\n                                <span style={{color: 'red', fontStyle: 'italic'}} href={null}>{episode.episodeNumber}. <strong>{episode.title}</strong></span>\r\n                                </ListGroup.Item></Tab.Pane>\r\n                            \r\n                          \r\n                        )\r\n                    }  else\r\n                        return ( \r\n                            <Tab.Pane key={`tabs${i++}`} eventKey={`season${episode.seasonNumber}`} style={{overflow:'hidden'}} onClick = {this.appendData.bind(this, episode.episodeFile)} >\r\n                                <span id={`season${episode.seasonNumber}`}style={{cursor: 'pointer'}} href={null}>\r\n                                    <ListGroup.Item>\r\n                                        <p>{episode.episodeNumber}. <strong>{episode.title}</strong> </p>\r\n                                        <span style={{fontSize:\"14px\"}}>{episode.overview}</span>\r\n                            </ListGroup.Item></span></Tab.Pane>\r\n                            )\r\n                        }\r\n                  )}\r\n                        </Tab.Content></ListGroup>\r\n                    </Tab.Container>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n\r\n\r\n\r\n</div>\r\n   )}\r\n}\r\n\r\nexport default Video;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Col, Row, Container} from 'react-bootstrap'\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport swal from \"sweetalert\";\r\nimport Header from './header'\r\nconst ContactSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .required(\"Email address is required\"),\r\n    body: Yup.string().required(\"Email description is required\"),\r\n    username: Yup.string().required(\"Username not found.\")\r\n  });\r\n\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          alert: null,\r\n          loaded: false\r\n        };\r\n      }\r\n\r\n    submitForm = (values, history) => {\r\n        axios\r\n          .post('/contact', values)\r\n          .then(res => {\r\n            console.log(res.data.result);\r\n            if (res.data.result === \"success\") {\r\n              swal(\"Success!\", res.data.message, \"success\").then(value => {\r\n                history.push(\"/contact\");\r\n              });\r\n            } else if (res.data.result === \"error\") {\r\n              swal(\"Error!\", res.data.message, \"error\");\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n            swal(\"Error!\", \"Unexpected error\", \"error\");\r\n          });\r\n      };\r\n\r\n\r\n    showForm = ({\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        touched,\r\n        handleSubmit,\r\n        isSubmitting\r\n      }) => {\r\n\r\n    return(\r\n\r\n<form onSubmit={handleSubmit}>\r\n      <div className=\"loginRegisterTitle\">\r\n            </div>\r\n        <div className=\"emailfield\">\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n            value={values.email}\r\n            className={\r\n              errors.email && touched.email\r\n                ? \"form-control is-invalid\"\r\n                : \"form-control\"\r\n            }\r\n            placeholder=\"Email\"\r\n            style={{marginTop:'25px'}}\r\n\r\n          />\r\n          {errors.email && touched.email ? (\r\n            <small id=\"passwordHelp\" className=\"text-danger\">\r\n              {errors.email}\r\n            </small>\r\n          ) : null}\r\n        </div>\r\n        \r\n        <div className=\"contactfield\">\r\n          <textarea rows=\"5\"\r\n            type=\"text\"\r\n            name=\"body\"\r\n            onChange={handleChange}\r\n            value={values.body}\r\n            className={\r\n              errors.body && touched.body\r\n                ? \"form-control is-invalid\"\r\n                : \"form-control\"\r\n            }\r\n            placeholder=\"Send us a note here.\"\r\n            style={{marginTop:'25px'}}\r\n\r\n          />\r\n          {errors.body && touched.body ? (\r\n            <small id=\"bodyHelp\" className=\"text-danger\">\r\n              {errors.body}\r\n            </small>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col s8 offset-s2 center\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              className=\"btn btn-primary\"\r\n              style={{marginTop:'25px'}}\r\n            >\r\n              Send\r\n            </button>\r\n\r\n          </div>\r\n     \r\n        </div>\r\n      </form>\r\n\r\n    )\r\n      }\r\n       \r\n          render() \r\n          {\r\n              return(\r\n                <div className=\"contactdiv\">\r\n                    <Header />\r\n                <img src={`https://i.redd.it/hi1bli2irmg41.jpg`} alt={`poster`} style={{width:'100%'}} />\r\n           <Container style={{backgroundColor:\"#eee\",paddingBottom:\"7%\"}}>\r\n               \r\n               <Row md={12} className=\"justify-content-md-center\">\r\n               <h3 style={{textAlign:\"center\"}}>Contact Us</h3>\r\n   \r\n               </Row>\r\n   \r\n               <Row>\r\n                   \r\n   <Col md={6} className=\"justify-content-center\">\r\n   <p style={{marginTop:'7%'}}>We value loyal fans like you and our team wants to ensure that we are providing you with the \r\n   highest quality of LastPlay's shows and content. While simultaneously providing a high standard in customer service. No detail goes unnoticed at LastPlay and this is thanks to your help!\r\n   If you have any questions or need assistance, please fill out the form and one of our customer support associates will be in touch with you soon. \r\n   </p>\r\n   </Col>\r\n   <Col md={6} className=\"justify-content-center\">\r\n\r\n                  <Formik\r\n                    initialValues={{\r\n                      email: \"\",\r\n                      body: \"\",\r\n                      username: localStorage.userName\r\n                    }}\r\n                    onSubmit={(values, { setSubmitting }) => {\r\n                      this.submitForm(values, this.props.history);\r\n                      setSubmitting(false);\r\n                    }}\r\n                    validationSchema={ContactSchema}\r\n                  >\r\n                    {props => this.showForm(props)}\r\n                  </Formik>\r\n                  </Col>\r\n</Row>\r\n<Row style={{paddingTop:\"10%\"}}className=\"justify-content-md-center\">\r\n    \r\n<span  style={{fontStyle:\"italic\", fontSize:\"12px\"}}>“Everything in this world is magic, except for the magician.” — Dr. Ford</span>\r\n</Row>\r\n      </Container>\r\n      </div>\r\n  \r\n              )\r\n          }\r\n        }\r\n\r\nexport default Contact;","import React, { Component } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { Row, Container} from 'react-bootstrap'\r\nimport swal from \"sweetalert\";\r\nconst PasswordresetSchema = Yup.object().shape({\r\n  password: Yup.string().required(\"New Password is required\"),\r\n  confirm_password: Yup.string().oneOf(\r\n    [Yup.ref(\"password\"), null],\r\n    \"Both password need to be the same\"\r\n  )\r\n});\r\n\r\nclass Passwordreset extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      response: {},\r\n      error_message: null,\r\n      avatar: \"\"\r\n    };\r\n  }\r\n\r\n  submitForm = (values, history, token) => {\r\n console.log(\"hello\")\r\n  };\r\n  showForm = ({\r\n    values,\r\n    errors,\r\n    touched,\r\n    handleChange,\r\n    handleSubmit,\r\n    onSubmit,\r\n    isSubmitting,\r\n    setFieldValue\r\n  }) => {\r\n    return (\r\n      <div>\r\n      <Row className=\"justify-content-center\">\r\n      <h1><b>Last</b>Play<span style={{fontSize:\"14px\"}}>.tv</span></h1> \r\n     \r\n      </Row>\r\n      <Row className=\"justify-content-center\">\r\n      <img src={process.env.PUBLIC_URL + '/logo2.png'} alt=\"logo\" /> \r\n      </Row>\r\n      <form style={{marginTop:\"5%\"}} onSubmit={handleSubmit}>\r\n      <span style={{textAlign:\"Center\"}} >You have requested to change your password. Please enter your new password below.</span>\r\n\r\n      <Row className=\"justify-content-center\">\r\n\r\n            <input\r\n              name=\"password\"\r\n              onChange={handleChange}\r\n              value={values.password}\r\n              type=\"password\"\r\n              className={\r\n                errors.password && touched.password\r\n                  ? \"form-control is-invalid\"\r\n                  : \"form-controls2\"\r\n              }\r\n              id=\"password\"\r\n              placeholder=\"Enter new password\"\r\n            />\r\n            {errors.password && touched.password ? (\r\n              <small id=\"passwordHelp\" class=\"text-danger\">\r\n                {errors.password}\r\n              </small>\r\n            ) : null}\r\n            </Row>\r\n                <Row className=\"justify-content-center\">\r\n\r\n\r\n            <input\r\n              onChange={handleChange}\r\n              value={values.confirm_password}\r\n              type=\"password\"\r\n              className={\r\n                errors.confirm_password && touched.confirm_password\r\n                  ? \"form-control is-invalid\"\r\n                  : \"form-controls2\"\r\n              }\r\n              id=\"confirm_password\"\r\n              name=\"confirm_password  \"\r\n              placeholder=\"Enter password again\"\r\n            />\r\n            {errors.confirm_password && touched.confirm_password ? (\r\n              <small id=\"passwordHelp\" class=\"text-danger\">\r\n                {errors.confirm_password}\r\n              </small>\r\n            ) : null}\r\n</Row>\r\n        </form>\r\n<Row className=\"justify-content-center\">\r\n<button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              className=\"btn btn-primary\"\r\n              style={{marginTop:'25px'}}\r\n            >\r\n              Send\r\n            </button>\r\n        </Row>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n<Container>\r\n              <Formik\r\n                initialValues={{\r\n                  password: \"\"\r\n                }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                  this.submitForm(values, this.props.history,this.props.match.params[\"token\"]\r\n                  );\r\n                  setSubmitting(false);\r\n                }}\r\n                validationSchema={PasswordresetSchema}\r\n              >\r\n                {/* {this.showForm()}            */}\r\n                {props => this.showForm(props)}\r\n              </Formik>\r\n</Container>\r\n    \r\n    )}\r\n}\r\n\r\nexport default Passwordreset;","import React, { Component } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { Row, Container} from 'react-bootstrap'\r\nimport '../style.css'\r\n\r\n\r\nconst PasswordForgotSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .required(\"username is Required\")\r\n});\r\n\r\nclass Passwordforgot extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      response: {},\r\n      error_message: null,\r\n      avatar: \"\"\r\n    };\r\n  }\r\n\r\n  submitForm = formData => {\r\n     axios\r\n      .post(\"http://localhost:3000/password/reset\", formData)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.data.result === \"success\") {\r\n          swal(\"Success!\", res.data.message, \"success\").then(value => {\r\n            //s window.location.reload();\r\n          });\r\n        } else if (res.data.result === \"error\") {\r\n          swal(\"Error!\", res.data.message, \"error\");\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        swal(\"Error!\", \"Unexpected error\", \"error\");\r\n      });\r\n  };\r\n  showForm = ({\r\n    values,\r\n    errors,\r\n    touched,\r\n    handleChange,\r\n    handleSubmit,\r\n    onSubmit,\r\n    isSubmitting,\r\n    setFieldValue\r\n  }) => {\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n        <h1><b>Last</b>Play<span style={{fontSize:\"14px\"}}>.tv</span></h1>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n        <img src={process.env.PUBLIC_URL + '/logo2.png'} alt=\"logo\" /> \r\n        </Row>\r\n        <Row className=\"justify-content-center\"style={{marginTop:\"5%\"}}>\r\n      <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"username\">Confirm your username and we will send you instructions to reset your password.</label>\r\n            <input style={{textAlign:\"center\"}}\r\n              onChange={handleChange}\r\n              value={values.username}\r\n              type=\"username\"\r\n              className={\r\n                errors.username && touched.username\r\n                  ? \"form-control is-invalid\"\r\n                  : \"form-controls\"\r\n              }\r\n              id=\"username\"\r\n              placeholder=\"Username\"\r\n            />\r\n            {errors.username && touched.username ? (\r\n              <small id=\"passwordHelp\" class=\"text-danger\">\r\n                {errors.username}\r\n              </small>\r\n            ) : null}\r\n        {/* /.card-body */}\r\n        </form>\r\n\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n        <button\r\n              type=\"submit\"\r\n              disable={isSubmitting}\r\n              class=\"btn btn-primary\"\r\n            >\r\n              Request new password\r\n            </button>\r\n\r\n        </Row>\r\n      </div>\r\n\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n<Container >\r\n<Formik\r\n                initialValues={{\r\n                  username: \"\"\r\n                }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                  this.submitForm(values, this.props.history);\r\n                  setSubmitting(false);\r\n                }}\r\n                validationSchema={PasswordForgotSchema}\r\n              >\r\n                {props => this.showForm(props)}\r\n              </Formik>\r\n\r\n\r\n</Container>\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Passwordforgot;","import React, { Component } from \"react\";\r\nimport Register from \"./components/register\";\r\nimport Login from \"./components/login\";\r\nimport Dashboard from \"./components/dashboard/index.js\";\r\nimport Video from \"./components/video\";\r\nimport Contact from \"./components/contact\";\r\nimport './index.css'\r\nimport Passwordreset from \"./components/passwordreset\";\r\nimport Passwordforgot from \"./components/passwordforgot\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n  const isLoggedIn = () => {\r\n\r\n    return localStorage.getItem(\"TOKEN_KEY\") != null;\r\n  };\r\n  // Protected Route\r\n  const SecuredRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        // ternary condition\r\n  \r\n        isLoggedIn() === true ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n  export default class App extends Component {\r\n    componentWillUpdate(nextProps, nextState) {\r\n      console.log(\"update\");\r\n    }\r\n  \r\n    render() {\r\n      // const {pathname} = this.props.location;\r\n      return (\r\n        <Router>\r\n          <Switch>\r\n            <div>\r\n            <Route exact path=\"/\" component={Login} />\r\n              <Route path=\"/register\" component={Register} />\r\n              <Route path=\"/login/:notify?\" component={Login} />\r\n              <Route path=\"/password/reset/:token\" component={Passwordreset} />\r\n              <Route path=\"/password/forgot\" component={Passwordforgot} />\r\n              <SecuredRoute path=\"/dashboard\" component={Dashboard} />\r\n              <SecuredRoute path=\"/contact\" component={Contact} />\r\n\r\n              <SecuredRoute exact path=\"/tv/:id\" component={Video} />\r\n\r\n              \r\n            </div>\r\n          </Switch>\r\n          </Router>\r\n      );\r\n    }\r\n  }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from \"react-router\";\nimport './index.css';\nimport App from './App';\n\nimport { createBrowserHistory } from \"history\";\n\nimport * as serviceWorker from './serviceWorker';\n\nconst history = createBrowserHistory();\n\n\nReactDOM.render(\n  <Router history = {history}>\n    <App />\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
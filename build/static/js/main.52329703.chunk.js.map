{"version":3,"sources":["components/register.js","components/login.js","components/dashboard.js","components/player.js","components/video.js","components/header.js","components/contact.js","App.js","serviceWorker.js","index.js"],"names":["SignupSchema","Yup","shape","username","min","max","required","email","password","confirm_password","oneOf","Register","props","submitForm","values","history","toLowerCase","trim","axios","post","then","res","console","log","data","result","swal","message","value","push","catch","error","showForm","errors","touched","handleChange","handleSubmit","isSubmitting","setFieldValue","Container","Row","xs","lg","className","onSubmit","href","type","name","onChange","placeholder","fullname","id","class","style","marginTop","disabled","state","alert","loaded","initialValues","setSubmitting","validationSchema","Component","LoginSchema","Login","localStorage","setItem","token","textAlign","getItem","this","notify","match","params","undefined","Dashboard","shows","fetch","headers","json","setState","fluid","map","show","Col","to","key","src","alt","title","JSPlayer","videoTitle","autostart","onReady","bind","onVideoLoad","playerId","event","item","description","playsInline","poster","source","position","React","Video","appendData","a","link","path","replace","pos","epTitle","player","episodeTitle","not_visible","useEffect","window","scrollTo","top","left","behavior","useEffectBottom","displayData","showdata","episodes","urls","Promise","all","res1","res2","res3","filter","seasonNumber","M","Tabs","init","display","padding","i","seasonCount","backgroundColor","width","md","network","runtime","certification","fontSize","genres","join","overview","onContextMenu","e","preventDefault","stopPropagation","Tab","defaultActiveKey","responsive","desktop","breakpoint","items","partialVisibilityGutter","slidesToSlide","tablet","mobile","centerMode","swipeable","draggable","ssr","infinite","keyBoardControl","containerClass","removeArrowOnDeviceType","deviceType","dotListClass","itemClass","focusOnSelect","episode","Nav","Link","eventKey","variant","imdbId","backgroundImage","backgroundSize","onError","target","maxHeight","ListGroup","Content","hasFile","Pane","Item","color","fontStyle","episodeNumber","overflow","cursor","onClick","episodeFile","Header","Logout","buttons","nope","text","sure","val","removeItem","textTransform","userName","withRouter","Contact","createBrowserHistory","listen","location","ReactGA","set","page","pathname","pageview","initialize","userId","isLoggedIn","SecuredRoute","component","rest","render","App","nextProps","nextState","exact","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.52329703.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { Row, Container} from 'react-bootstrap'\r\n\r\nimport './register.css'\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .min(2, \"Username is too Short!\")\r\n    .max(50, \"Username is Too Long!\")\r\n    .required(\"Username is Required\"),\r\n  email: Yup.string()\r\n    .email(\"Invalid email\")\r\n    .required(\"Email is Required\"),\r\n  password: Yup.string().required(\"Password is required\"),\r\n  confirm_password: Yup.string().oneOf(\r\n    [Yup.ref(\"password\"), null],\r\n    \"Passwords do not match\"\r\n  )\r\n});\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this.props)\r\n\r\n    this.state = {\r\n      alert: null,\r\n      loaded: false\r\n    };\r\n  }\r\n\r\n  submitForm = (values, history) => {\r\n    values.username = values.username.toLowerCase()\r\n    values.username = values.username.trim()\r\n    axios\r\n      .post('./register', values)\r\n      .then(res => {\r\n        console.log(res.data.result);\r\n        if (res.data.result === \"success\") {\r\n          swal(\"Success!\", res.data.message, \"success\").then(value => {\r\n            history.push(\"/login\");\r\n          });\r\n        } else if (res.data.result === \"error\") {\r\n          swal(\"Error!\", res.data.message, \"error\");\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        swal(\"Error!\", \"Unexpected error\", \"error\");\r\n      });\r\n  };\r\n  showForm = ({\r\n    values,\r\n    errors,\r\n    touched,\r\n    handleChange,\r\n    handleSubmit,\r\n    setFieldValue,\r\n    isSubmitting\r\n  }) => {\r\n    return (\r\n      <Container>\r\n      <Row xs={1} lg={4} className=\"justify-content-center\">\r\n      <form onSubmit={handleSubmit}>\r\n      <div className=\"loginRegisterTitle\">\r\n      <a href=\"/register\" className=\"row justify-content-center\">\r\n              <h1><b>Last</b>Play</h1>\r\n            </a>\r\n            </div>\r\n        <div className=\"registerLogin\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            onChange={handleChange}\r\n            value={values.username}\r\n            placeholder=\"Username\"\r\n            className={\r\n              errors.username && touched.username\r\n                ? \"form-control is-invalid\"\r\n                : \"form-control\"\r\n            }\r\n          />\r\n          {errors.fullname && touched.fullname ? (\r\n            <small id=\"passwordHelp\" class=\"text-danger\">\r\n              {errors.username}\r\n            </small>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"registerLogin\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n            value={values.email}\r\n            className={\r\n              errors.email && touched.email\r\n                ? \"form-control is-invalid\"\r\n                : \"form-control\"\r\n            }\r\n            placeholder=\"Email\"\r\n            style={{marginTop:'25px'}}\r\n\r\n          />\r\n          {errors.email && touched.email ? (\r\n            <small id=\"passwordHelp\" class=\"text-danger\">\r\n              {errors.email}\r\n            </small>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"registerLogin\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            value={values.password}\r\n            placeholder=\"Password\"\r\n            style={{marginTop:'25px'}}\r\n            className={\r\n              errors.password && touched.password\r\n                ? \"form-control is-invalid\"\r\n                : \"form-control\"\r\n            }\r\n          />\r\n          {errors.password && touched.password ? (\r\n            <small id=\"passwordHelp\" class=\"text-danger\">\r\n              {errors.password}\r\n            </small>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"registerLogin\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirm_password\"\r\n            onChange={handleChange}\r\n            className={\r\n              errors.confirm_password && touched.confirm_password\r\n                ? \"form-control is-invalid\"\r\n                : \"form-control\"\r\n            }\r\n            placeholder=\"Confirm Password\"\r\n            style={{marginTop:'25px'}}\r\n\r\n          />\r\n          {errors.confirm_password && touched.confirm_password ? (\r\n            <small id=\"passwordHelp\" class=\"text-danger\">\r\n              {errors.confirm_password}\r\n            </small>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col s8 offset-s2 center\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              class=\"btn btn-primary btn-block\"\r\n              style={{marginTop:'25px'}}\r\n            >\r\n              Register\r\n            </button>\r\n\r\n          </div>\r\n     \r\n        </div>\r\n      </form>\r\n      </Row>\r\n      </Container>    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"register-page\">\r\n        \r\n          \r\n            <div>\r\n              <Formik\r\n                initialValues={{\r\n                  fullname: \"\",\r\n                  email: \"\",\r\n                  password: \"\",\r\n                  confirm_password: \"\"\r\n                }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                  this.submitForm(values, this.props.history);\r\n                  setSubmitting(false);\r\n                }}\r\n                validationSchema={SignupSchema}\r\n              >\r\n                {props => this.showForm(props)}\r\n              </Formik>\r\n            </div>\r\n            {/* /.form-box */}\r\n          \r\n          {/* /.card */}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;","  \r\nimport React, { Component } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { Row, Container} from 'react-bootstrap'\r\nimport './style.css'\r\n\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .min(2, \"username is Too Short!\")\r\n    .max(50, \"username is Too Long!\")\r\n    .required(\"Username is Required\"),\r\n  password: Yup.string().required(\"Password is required\")\r\n});\r\n\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      alert: null\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"TOKEN_KEY\") != null) {\r\n      return this.props.history.push('/dashboard');\r\n    }\r\n    let notify = this.props.match.params[\"notify\"]\r\n    if(notify !== undefined){\r\n      if(notify === 'error'){\r\n        swal(\"Activation Fail please try again !\", '', \"error\")\r\n      }else if(notify === 'success'){\r\n        swal(\"Activation Success your can login !\", '', \"success\")\r\n      }\r\n     \r\n    }\r\n  }\r\n\r\n  submitForm = (values, history) => {\r\n    values.username = values.username.toLowerCase()\r\n    axios\r\n      .post('./login', values, values)\r\n      .then(res => {\r\n        if (res.data.result === \"success\") {\r\n          localStorage.setItem(\"TOKEN_KEY\", res.data.token);\r\n          localStorage.setItem(\"userName\", values.username)\r\n          swal(\"Success!\", res.data.message, \"success\").then(value => {\r\n            history.push(\"/dashboard\");\r\n          });\r\n        } else if (res.data.result === \"error\") {\r\n          swal(\"Error!\", res.data.message, \"error\");\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        return swal(\"Error!\", error.message, \"error\");\r\n      });\r\n  };\r\n  showForm = ({\r\n    values,\r\n    errors,\r\n    touched,\r\n    handleChange,\r\n    handleSubmit,\r\n    setFieldValue,\r\n    isSubmitting\r\n  }) => {\r\n    return (<Container>\r\n      <Row xs={1} lg={4} className=\"justify-content-center\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"loginRegisterTitle\">\r\n      <a href=\"/login\" style={{textAlign:'center'}}className=\"row justify-content-center\">\r\n              <h1><b>Last</b>Play</h1>\r\n            </a>\r\n            </div>\r\n        <div className=\"registerLogin\">\r\n          <input type=\"text\" name=\"username\" onChange={handleChange} value={values.username}  placeholder=\"Username\"className={errors.username && touched.username? \"form-control is-invalid\": \"form-control\"}/>\r\n          <div className=\"\">\r\n            <div className=\"\">\r\n              <span className=\"fas fa-user\"></span>\r\n            </div>\r\n          </div>\r\n          {errors.username && touched.username ? (\r\n            <small id=\"passwordHelp\" className=\"text-danger\">\r\n              {errors.username}\r\n            </small>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"registerLogin\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            value={values.password}\r\n            placeholder=\"Password\"\r\n            style={{marginTop:'25px'}}\r\n            className={\r\n              errors.password && touched.password\r\n                ? \"form-control is-invalid\"\r\n                : \"form-control\"\r\n            }\r\n          />\r\n          <div className=\"input-group-append\">\r\n              <span className=\"fas fa-lock\"></span>\r\n          </div>\r\n          {errors.password && touched.password ? (\r\n            <small id=\"passwordHelp\" className=\"text-danger\">\r\n              {errors.password}\r\n            </small>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"row justify-content-md-center\">\r\n\r\n          \r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              className=\"btn btn-primary btn-block\"\r\n              style={{marginTop:'25px'}}\r\n            >\r\n              Login\r\n            </button>\r\n        </div>\r\n        \r\n      </form>\r\n      </Row>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login-page\">\r\n        <div className=\"register-box\">\r\n            <div className=\"card-body register-card-body\">\r\n \r\n              <Formik\r\n                initialValues={{\r\n                  username: \"\",\r\n                  password: \"\"\r\n                }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                  this.submitForm(values, this.props.history);\r\n                  setSubmitting(false);\r\n                }}\r\n                validationSchema={LoginSchema}\r\n              >\r\n                {/* {this.showForm()}            */}\r\n                {props => this.showForm(props)}\r\n              </Formik>\r\n\r\n\r\n            </div>\r\n        </div>\r\n            </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container} from 'react-bootstrap'\r\nimport './style.css'\r\n\r\nclass Dashboard extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            shows: []\r\n        }\r\n    }\r\n\r\ncomponentDidMount() {\r\n\r\n    fetch('https://lp-server1.lastplay.tv/app/api/series?apikey=33af4f32a34140faa3b3119541c78e14',           \r\n     { headers: {\r\n        'Accept': 'application/json',\r\n                  'Content-Type': ' application/json',\r\n                  'X-API-SERVER': '85499f9f'\r\n     }})\r\n    .then(res => res.json())\r\n    .then((data)=> {\r\n        this.setState({ \r\n            shows: data\r\n        })\r\n        console.log(this.state.shows)\r\n    })\r\n    .catch(console.log)\r\n}\r\n\r\n\r\nrender() {\r\n    return (\r\n        <Container fluid>\r\n          <Row >\r\n            {this.state.shows.map(show =>\r\n            <Col className='shows'>\r\n                <Link to={`tv/${show.id}`}>\r\n                  <a href=\"!#\" key={show.id}> \r\n                    <img src={`https://lp-server1.lastplay.tv/app/MediaCover/${show.id}/poster-250.jpg`} alt={`${show.title} poster`}/> <br />\r\n                    <span>{show.title}</span>                 \r\n\r\n                  </a>\r\n                </Link>\r\n            </Col>)}\r\n          </Row>\r\n        </Container>\r\n    )\r\n    }\r\n}\r\nexport default Dashboard","import React from 'react';\r\nimport { Player, BigPlayButton } from 'video-react';\r\nimport \"video-react/dist/video-react.css\";\r\n\r\nclass JSPlayer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      videoTitle: '',\r\n      autostart: 'viewable',\r\n    };\r\n\r\n    console.log(this.props)\r\n\r\n    this.onReady = this.onReady.bind(this);\r\n    this.onVideoLoad = this.onVideoLoad.bind(this);\r\n\r\n    // each instance of <ReactJWPlayer> needs a unique id.\r\n    // we randomly generate it here and assign to the container instance.\r\n    this.playerId = ' ';\r\n\r\n  }\r\n  onReady(event) {\r\n    // interact with JW Player API here\r\n  }\r\n\r\n  onVideoLoad(event) {\r\n    this.setState({\r\n      videoTitle: event.item.description // this only works with json feeds!\r\n    });\r\n  }\r\n  render() \r\n  {\r\n    return (\r\n      <div className='video-react-big-play-button-center'>\r\n        <h1>{ this.state.videoTitle }</h1>\r\n        <Player\r\n      playsInline = {false}\r\n      poster={this.props.poster}\r\n      src={this.props.source}\r\n      className=\"video-react-big-play-button-center\"\r\n\r\n     \r\n      \r\n    ><BigPlayButton position=\"center\" />\r\n      </Player>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default JSPlayer;","import React from 'react';\r\nimport './style.css';\r\nimport JSPlayer from './player'\r\nimport M from \"materialize-css\";\r\nimport {Tab, Col, Nav, Row, Container, Toast} from 'react-bootstrap'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\n\r\n\r\n\r\nclass Video extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.displayData = [];\r\n\r\n        this.state = {\r\n            showdata: this.displayData,\r\n            shows: [],\r\n            episodes: [],\r\n            player: '',\r\n            poster: '',\r\n            not_visible: true,\r\n            loaded:false\r\n        }\r\n        \r\n\r\n        this.appendData = this.appendData.bind(this);\r\n\r\n    };\r\n    componentDidMount() {\r\n        let urls = [fetch(`https://lp-server1.lastplay.tv/app/api/episode?seriesId=${this.props.match.params.id}&apikey=33af4f32a34140faa3b3119541c78e14`),\r\n                    fetch(`https://lp-server1.lastplay.tv/app/api/series/id=${this.props.match.params.id}?apikey=33af4f32a34140faa3b3119541c78e14`)]\r\n        Promise.all(urls)\r\n        .then(([res1, res2]) => { \r\n            return Promise.all([res1.json(), res2.json()]) \r\n         })\r\n         .then(([res1, res2, res3]) => {\r\n             res3 = res1.filter(res3 => res3.seasonNumber > 0)\r\n           this.setState({\r\n               shows: res2,\r\n               episodes: res3,\r\n               loaded: true,\r\n           })\r\n         });\r\n         M.Tabs.init(this.Tabs);\r\n   }\r\n\r\n    appendData = (a) => {\r\n           let link = 'https://lp-server1.lastplay.tv' + a.path.replace('/media/disk1', '')\r\n           let pos = `https://lp-server1.lastplay.tv/app/MediaCover/${this.state.shows.id}/fanart.jpg`\r\n           let epTitle = a\r\n           console.log(epTitle)\r\n            this.setState({\r\n                player: link,\r\n                poster: pos,\r\n                episodeTitle: epTitle,\r\n                not_visible: false\r\n        })\r\n        this.useEffect()\r\n    }\r\n\r\n    useEffect = () => {\r\n        window.scrollTo({\r\n            top: 500,\r\n            left: 0,\r\n            behavior: 'smooth'\r\n          });\r\n      }\r\n\r\n      useEffectBottom = () => {\r\n        window.scrollTo({\r\n            top: 1500,\r\n            left: 0,\r\n            behavior: 'smooth'\r\n          });\r\n        }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const responsive = {\r\n            desktop: {\r\n              breakpoint: { max: 3000, min: 600 },\r\n              items: 2,\r\n              partialVisibilityGutter: 40, // this is needed to tell the amount of px that should be visible.\r\n              slidesToSlide: 2\r\n            },\r\n            tablet: {\r\n              breakpoint: { max: 1024, min: 464 },\r\n              items: 2,\r\n              partialVisibilityGutter: 30,             // this is needed to tell the amount of px that should be visible.\r\n\r\n              slidesToSlide: 2\r\n            },\r\n            mobile: {\r\n              breakpoint: { max: 464, min: 0 },\r\n              items: 1,\r\n              partialVisibilityGutter: 30 // this is needed to tell the amount of px that should be visible.\r\n            }\r\n          }\r\n\r\n        const style = this.state.not_visible ? {display: 'none', padding: '10%'} : {}\r\n        let widths = this.state.shows.seasonCount * 300\r\n        \r\nlet i = 0\r\nif (this.state.loaded === false) \r\n  return null;\r\n\r\n console.log(this.state.episodes)\r\n\r\n        return ( \r\n            <div style={{backgroundColor:\"#f1f1f1\"}}>\r\n                <div className=\"UpperHeader\">\r\n                 <img src={`https://lp-server1.lastplay.tv/app/MediaCover/${this.state.shows.id}/fanart.jpg`} alt={`${this.state.shows.title} poster`} style={{width:'100%'}} />\r\n                </div>\r\n<Container>\r\n   <Row>\r\n    <Col className=\"postertab\" md={3} > \r\n        <img src={`https://lp-server1.lastplay.tv/app/MediaCover/${this.state.shows.id}/poster-250.jpg`} alt={`${this.state.shows.title} poster`} /> <br />\r\n        <h2>{this.state.shows.title}</h2>\r\n        <p>{this.state.shows.network} | {this.state.shows.runtime} min. | {this.state.shows.certification}</p>\r\n        <span style={{fontSize:\"14px\"}}>{this.state.shows.genres.join(' | ')}</span>\r\n    </Col>\r\n    <Col md={9} style={{padding:'5%'}}>\r\n        <p>{this.state.shows.overview}</p>\r\n        \r\n        <div className = \"display-data-Container\" style={style}  onContextMenu={(e) => {\r\n    e.preventDefault(); \r\n    e.stopPropagation();\r\n}}> \r\n            <h3>{this.state.show}</h3>\r\n                    <JSPlayer source={this.state.player} poster={this.state.poster} >\r\n                    </JSPlayer>\r\n        </div> \r\n            <div>\r\n            <Row>\r\n      <Col xs={6}>\r\n        \r\n      </Col>\r\n \r\n    </Row>\r\n \r\n          <Tab.Container defaultActiveKey=\"first\">\r\n            <Carousel responsive={responsive} centerMode={true}\r\n              swipeable={true}\r\n              draggable={false}\r\n              ssr={true} // means to render carousel on server-side.\r\n              infinite={true}\r\n              keyBoardControl={true}\r\n              containerClass=\"carousel-container\"\r\n              removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n              deviceType={this.props.deviceType}\r\n              dotListClass=\"custom-dot-list-style\"\r\n              itemClass=\"carousel-item-padding-40-px\"\r\n              focusOnSelect={true}\r\n\r\n              >\r\n                  \r\n\r\n                \r\n                    {this.state.episodes.map(episode => {\r\n                    if (this.state.shows.seasonCount > i) {\r\n                            i++\r\n                    return ( \r\n                        <div className=\"card\"><Nav.Link eventKey={`season${i}`}>\r\n                        <img variant=\"top\" className=\"card-img\" src={`http://lp-server1.lastplay.tv/t/${this.state.shows.imdbId}/season0${i}-poster.jpg`}\r\n                         alt=\"poster\" \r\n                         style={{backgroundImage: `url(https://lp-server1.lastplay.tv/app/MediaCover/${this.state.shows.id}/poster-250.jpg)`,\r\n                          backgroundSize: 'cover'}}\r\n                        onError={(e) => {\r\n                            e.target.src = `https://lp-server1.lastplay.tv/app/MediaCover/${this.state.shows.id}/poster-250.jpg` // some replacement image\r\n                         }} />\r\n                        <h2 style={{maxHeight:'45px'}}>Season {i}  </h2>\r\n                        </Nav.Link></div>\r\n                                )}})}                  \r\n                </Carousel>\r\n\r\n\r\n      \r\n                <ListGroup><Tab.Content className=\"seasonTabs\" >\r\n            {this.state.episodes.map(episode => {\r\n                    if (episode.hasFile === false) {\r\n                        return ( \r\n                            <Tab.Pane eventKey={`season${episode.seasonNumber}`} key={episode.id}><ListGroup.Item>\r\n                                <a style={{color: 'red', fontStyle: 'italic'}}>{episode.episodeNumber}. <strong>{episode.title}</strong></a>\r\n                                </ListGroup.Item></Tab.Pane>\r\n                            \r\n                          \r\n                        )\r\n                    }  else\r\n                        return ( \r\n                        <Tab.Pane eventKey={`season${episode.seasonNumber}`} style={{overflow:'hidden'}}><ListGroup.Item>\r\n                            <a id={`season${episode.seasonNumber}`}style={{cursor: 'pointer'}} onClick = {this.appendData.bind(this, episode.episodeFile)}><p> {episode.episodeNumber}. <strong>{episode.title}</strong> </p>\r\n                            <span style={{fontSize:\"14px\"}}>{episode.overview}</span></a>\r\n                            </ListGroup.Item></Tab.Pane>\r\n                            )\r\n                        }\r\n                  )}\r\n                        </Tab.Content></ListGroup>\r\n                    </Tab.Container>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n\r\n\r\n\r\n</div>\r\n   )}\r\n}\r\n\r\nexport default Video;","import React, { Component } from \"react\";\r\nimport swal from \"sweetalert\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Nav } from 'react-bootstrap'\r\n\r\nclass Header extends Component {\r\n  Logout = () => {\r\n    swal(\"Logout?\", {\r\n      buttons: {\r\n        nope: {\r\n          text: \"Yes\",\r\n          value: \"yes\"\r\n        },\r\n        sure: {\r\n          text: \"Not yet\",\r\n          value: \"no\"\r\n        }\r\n      }\r\n    }).then(value => {\r\n      switch (value) {\r\n        case \"yes\":\r\n          swal(\"Logout successful\", \"\").then(val => {\r\n            localStorage.removeItem(\"TOKEN_KEY\");\r\n            return this.props.history.push(\"/login\");\r\n          });\r\n          break;\r\n        case \"no\":\r\n          break;\r\n        default:\r\n \r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n<div className=\"navigation\">\r\n<Nav className=\"navz\">\r\n<Nav.Item>\r\n      <Nav.Link href=\"/dashboard\"><b>Last</b>Play</Nav.Link>\r\n    </Nav.Item>\r\n<Nav.Item>\r\n      <Nav.Link href=\"/dashboard\">Home</Nav.Link>\r\n    </Nav.Item>\r\n</Nav>\r\n<Nav className=\"justify-content-end\">\r\n<Nav.Link eventKey=\"3\" disabled style={{textTransform: 'capitalize'}}>\r\n          Welcome, {localStorage.userName}\r\n        </Nav.Link>\r\n<Nav.Item>\r\n      <Nav.Link href=\"#\" onClick={this.Logout}>Logout</Nav.Link>\r\n    </Nav.Item>\r\n</Nav>\r\n</div>\r\n            \r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nclass Contact extends Component {\r\n\r\n\r\n    render() {\r\n        return(\r\n<div>\r\n          </div>\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from \"react\";\nimport Register from \"./components/register\";\nimport Login from \"./components/login\";\nimport Dashboard from \"./components/dashboard\";\nimport Video from \"./components/video\";\nimport Header from \"./components/header\";\nimport Contact from \"./components/contact\";\nimport ReactGA from 'react-ga';\nimport { createBrowserHistory } from 'history';\nimport { Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport './index.css'\n\n\n\nconst history = createBrowserHistory();\n\nhistory.listen(location => {\n  ReactGA.set({ page: location.pathname }); // Update the user's current page\n  ReactGA.pageview(location.pathname); // Record a pageview for the given page\n});\n\nconst trackingId = \"UA-162249992-1\"; // Replace with your Google Analytics tracking ID\nReactGA.initialize(trackingId);\nReactGA.set({\n  userId: {localStorage}\n  // any data that is relevant to the user session\n  // that you would like to track with google analytics\n})\n\n\nconst isLoggedIn = () => {\n  return localStorage.getItem(\"TOKEN_KEY\") != null;\n};\n\n// Protected Route\nconst SecuredRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      // ternary condition\n\n      isLoggedIn() === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\nexport default class App extends Component {\n  componentWillUpdate(nextProps, nextState) {\n    console.log(\"update\");\n  }\n\n\n  render() {\n    // const {pathname} = this.props.location;\n    return (\n      <Router history={history}>\n        <Switch>\n          <div>\n          {isLoggedIn() && <Header />}\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/login/:notify?\" component={Login} />\n            <SecuredRoute path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute path=\"/\" exact component={Dashboard} />\n            <SecuredRoute path=\"/tv/:id\" component={Video} />\n            <SecuredRoute path=\"/contact\" component={Contact} />\n          </div>\n        </Switch>\n      </Router>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}